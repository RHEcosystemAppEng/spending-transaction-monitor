name: Ingestion Service CI

on:
  push:
    branches: [main, test-*]
    paths:
      - "packages/ingestion-service/**"
      - ".github/workflows/ingestion-service-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "packages/ingestion-service/**"
      - ".github/workflows/ingestion-service-ci.yml"

jobs:
  lint-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        working-directory: ./packages/ingestion-service
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        working-directory: ./packages/ingestion-service
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build-py:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ingestion-service-py:ci
    steps:
      - uses: actions/checkout@v3
      - name: Set up Helm
        working-directory: ./packages/ingestion-service
        run: |
          chmod +x scripts/get_helm.sh
          ./scripts/get_helm.sh
      - name: Lint Helm chart
        working-directory: ./packages/ingestion-service
        run: |
          helm lint deploy/ingestion-service-py/helm
      - name: Build container image
        working-directory: ./packages/ingestion-service
        run: |
          podman build  --file Containerfile --tag ${{ env.IMAGE_TAG }}
      - name: Save image for E2E tests
        run: |
          echo "Saving image: ${{ env.IMAGE_TAG }}"
          podman save ${{ env.IMAGE_TAG }} -o /tmp/ingestion-service-py.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ingestion-service-image
          path: /tmp/ingestion-service-py.tar
          retention-days: 1

  test-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install dependencies
        working-directory: ./packages/ingestion-service/
        run: uv sync --all-extras
      - name: Run tests
        working-directory: ./packages/ingestion-service/
        run: uv run python run_tests.py

  e2e-test:
    runs-on: ubuntu-latest
    needs: [build-py]
    env:
      KAFKA_RELEASE_NAME: kafka
      IMAGE_TAG: ingestion-service-py:ci
    steps:
      - uses: actions/checkout@v3
      - name: Set up KinD cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: kind
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: ingestion-service-image
          path: /tmp/
      - name: Load image into KinD cluster
        run: |
          echo "Loading image archive into KinD cluster..."
          kind load image-archive /tmp/ingestion-service-py.tar --name kind
          echo "Verifying loaded images in cluster..."
          docker exec kind-control-plane crictl images | grep ingestion || echo "No ingestion images found"
      - name: Install dependencies
        working-directory: ./packages/ingestion-service
        run: |
          python -m pip install --upgrade pip
          pip install requests kafka-python
      - name: Set up Helm
        working-directory: ./packages/ingestion-service
        run: |
          chmod +x scripts/get_helm.sh
          ./scripts/get_helm.sh
      - name: Update Kafka Helm chart dependencies
        working-directory: ./packages/ingestion-service
        run: |
          helm dependency update deploy/kafka
      - name: Lint Kafka Helm chart
        working-directory: ./packages/ingestion-service
        run: |
          helm lint deploy/kafka
      - name: Deploy Kafka
        working-directory: ./packages/ingestion-service
        run: |
          echo "Giving the cluster some time to initialize..."
          sleep 30
          echo "Deploying Kafka..."
          helm install ${{ env.KAFKA_RELEASE_NAME }} ./deploy/kafka -n default
          echo "Waiting for Strimzi operator to be ready..."
          kubectl wait --for=condition=ready pod -l strimzi.io/kind=cluster-operator -n default --timeout=300s
          echo "Strimzi operator is ready."
          echo "Getting logs from Strimzi operator..."
          kubectl logs -l strimzi.io/kind=cluster-operator -n default --tail=500
          echo "Waiting for Kafka cluster to be ready..."
          kubectl wait --for=condition=Ready kafka/${{ env.KAFKA_RELEASE_NAME }}-kafka --timeout=300s
          echo "Kafka is ready."
      - name: Deploy Ingestion Service - Python
        working-directory: ./packages/ingestion-service
        run: |
          echo "Deploying Ingestion Service - Python..."
          helm install ingestion-py ./deploy/ingestion-service-py/helm -n default \
            --set kafka.host=kafka-kafka-kafka-bootstrap \
            --set kafka.port=9092 \
            --set image.repository=localhost/ingestion-service-py \
            --set image.tag=ci \
            --set image.pullPolicy=Never
          echo "Waiting for Ingestion Service to be ready..."
          kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=ingestion-service-py -n default --timeout=300s
          echo "Ingestion Service is ready."
      - name: Get Ingestion Service logs on failure
        if: failure()
        run: |
          echo "Capturing logs from Ingestion Service pod..."
          kubectl logs -l app.kubernetes.io/name=ingestion-service-py -n default --tail=500
      - name: Verify Deployments
        run: |
          echo "Verifying deployments..."
          kubectl get all -n default
          kubectl describe pods -n default
      - name: Run E2E Test - Python
        working-directory: ./packages/ingestion-service
        run: |
          echo "Creating e2e test runner pod..."
          kubectl run e2e-test-runner --image=python:3.12-slim -- sleep 3600
          echo "Waiting for test runner pod to be ready..."
          kubectl wait --for=condition=ready pod e2e-test-runner --timeout=300s
          echo "Installing test dependencies in the pod..."
          kubectl exec e2e-test-runner -- pip install requests kafka-python
                      echo "Copying e2e test to the pod..."
              kubectl cp ./ingestion-service-py/tests/e2e/test_e2e.py e2e-test-runner:/test_e2e.py
              echo "Running e2e test for python..."
              kubectl exec e2e-test-runner -- \
                env INGESTION_SERVICE_HOST=ingestion-py-ingestion-service-py \
                    INGESTION_SERVICE_PORT=80 \
                    KAFKA_HOST=kafka-kafka-kafka-bootstrap \
                    KAFKA_PORT=9092 \
                python /test_e2e.py
      - name: Get Kafka logs on failure
        if: failure()
        run: |
          echo "Capturing logs from Kafka pod..."
          kubectl logs kafka-kafka-dual-role-0 -n default --tail=500

name: Ingestion Service CI

on:
  push:
    branches: [main, test-*]
    paths:
      - "packages/ingestion-service/**"
      - ".github/workflows/ingestion-service-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "packages/ingestion-service/**"
      - ".github/workflows/ingestion-service-ci.yml"

jobs:
  lint-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        working-directory: ./packages/ingestion-service
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        working-directory: ./packages/ingestion-service
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build-py:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ingestion-service-py:ci
    steps:
      - uses: actions/checkout@v3
      - name: Set up Helm
        working-directory: ./packages/ingestion-service
        run: |
          chmod +x scripts/get_helm.sh
          ./scripts/get_helm.sh
      - name: Lint Helm chart
        working-directory: ./packages/ingestion-service
        run: |
          helm lint deploy/ingestion-service-py/helm
      - name: Build container image
        working-directory: ./packages/ingestion-service
        run: |
          podman build  --file Containerfile --tag ${{ env.IMAGE_TAG }}
      - name: Save image for E2E tests
        run: |
          echo "Saving image: ${{ env.IMAGE_TAG }}"
          podman save ${{ env.IMAGE_TAG }} -o /tmp/ingestion-service-py.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ingestion-service-image
          path: /tmp/ingestion-service-py.tar
          retention-days: 1

  test-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install dependencies
        working-directory: ./packages/ingestion-service/
        run: uv sync --all-extras
      - name: Run tests
        working-directory: ./packages/ingestion-service/
        run: uv run python run_tests.py


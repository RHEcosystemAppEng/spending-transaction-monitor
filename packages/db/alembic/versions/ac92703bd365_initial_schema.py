"""initial schema

Revision ID: ac92703bd365
Revises: 
Create Date: 2025-08-11 12:12:10.247254

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac92703bd365'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('firstName', sa.String(), nullable=False),
    sa.Column('lastName', sa.String(), nullable=False),
    sa.Column('phoneNumber', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('isActive', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('addressStreet', sa.String(), nullable=True),
    sa.Column('addressCity', sa.String(), nullable=True),
    sa.Column('addressState', sa.String(), nullable=True),
    sa.Column('addressZipCode', sa.String(), nullable=True),
    sa.Column('addressCountry', sa.String(), server_default=sa.text("'US'"), nullable=True),
    sa.Column('creditLimit', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currentBalance', sa.Numeric(precision=12, scale=2), server_default=sa.text('0.00'), nullable=True),
    sa.Column('locationConsentGiven', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('lastAppLocationLatitude', sa.Float(), nullable=True),
    sa.Column('lastAppLocationLongitude', sa.Float(), nullable=True),
    sa.Column('lastAppLocationTimestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lastAppLocationAccuracy', sa.Float(), nullable=True),
    sa.Column('lastTransactionLatitude', sa.Float(), nullable=True),
    sa.Column('lastTransactionLongitude', sa.Float(), nullable=True),
    sa.Column('lastTransactionTimestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lastTransactionCity', sa.String(), nullable=True),
    sa.Column('lastTransactionState', sa.String(), nullable=True),
    sa.Column('lastTransactionCountry', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('ix_users_city_state', 'users', ['addressCity', 'addressState'], unique=False)
    op.create_index('ix_users_location_consent', 'users', ['locationConsentGiven'], unique=False)
    op.create_table('alert_rules',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('isActive', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('alertType', sa.Enum('AMOUNT_THRESHOLD', 'MERCHANT_CATEGORY', 'MERCHANT_NAME', 'LOCATION_BASED', 'FREQUENCY_BASED', 'PATTERN_BASED', 'CUSTOM_QUERY', name='alerttype'), nullable=False),
    sa.Column('amountThreshold', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('merchantCategory', sa.String(), nullable=True),
    sa.Column('merchantName', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('timeframe', sa.String(), nullable=True),
    sa.Column('naturalLanguageQuery', sa.String(), nullable=True),
    sa.Column('notificationMethods', postgresql.ARRAY(sa.Enum('EMAIL', 'SMS', 'PUSH', 'WEBHOOK', name='notificationmethod')), nullable=True),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('lastTriggered', sa.DateTime(timezone=True), nullable=True),
    sa.Column('triggerCount', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_alert_rules_user_active', 'alert_rules', ['userId', 'isActive'], unique=False)
    op.create_table('credit_cards',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.String(), nullable=False),
    sa.Column('cardNumber', sa.String(), nullable=False),
    sa.Column('cardType', sa.String(), nullable=False),
    sa.Column('bankName', sa.String(), nullable=False),
    sa.Column('cardHolderName', sa.String(), nullable=False),
    sa.Column('expiryMonth', sa.Integer(), nullable=False),
    sa.Column('expiryYear', sa.Integer(), nullable=False),
    sa.Column('isActive', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.String(), nullable=False),
    sa.Column('creditCardId', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(), server_default=sa.text("'USD'"), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('merchantName', sa.String(), nullable=False),
    sa.Column('merchantCategory', sa.String(), nullable=False),
    sa.Column('transactionDate', sa.DateTime(timezone=True), nullable=False),
    sa.Column('transactionType', sa.Enum('PURCHASE', 'REFUND', 'CASHBACK', 'FEE', 'INTEREST', 'PAYMENT', name='transactiontype'), server_default=sa.text("'PURCHASE'"), nullable=False),
    sa.Column('merchantLocation', sa.String(), nullable=True),
    sa.Column('merchantCity', sa.String(), nullable=True),
    sa.Column('merchantState', sa.String(), nullable=True),
    sa.Column('merchantCountry', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'DECLINED', 'CANCELLED', 'SETTLED', name='transactionstatus'), server_default=sa.text("'PENDING'"), nullable=False),
    sa.Column('authorizationCode', sa.String(), nullable=True),
    sa.Column('referenceNumber', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creditCardId'], ['credit_cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transactions_amount', 'transactions', ['amount'], unique=False)
    op.create_index('ix_transactions_category', 'transactions', ['merchantCategory'], unique=False)
    op.create_index('ix_transactions_user_date', 'transactions', ['userId', 'transactionDate'], unique=False)
    op.create_table('alert_notifications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.String(), nullable=False),
    sa.Column('alertRuleId', sa.String(), nullable=False),
    sa.Column('transactionId', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('notificationMethod', sa.Enum('EMAIL', 'SMS', 'PUSH', 'WEBHOOK', name='notificationmethod'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED', 'FAILED', 'READ', name='notificationstatus'), server_default=sa.text("'PENDING'"), nullable=False),
    sa.Column('sentAt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deliveredAt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('readAt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['alertRuleId'], ['alert_rules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transactionId'], ['transactions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alert_notifications')
    op.drop_index('ix_transactions_user_date', table_name='transactions')
    op.drop_index('ix_transactions_category', table_name='transactions')
    op.drop_index('ix_transactions_amount', table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('credit_cards')
    op.drop_index('ix_alert_rules_user_active', table_name='alert_rules')
    op.drop_table('alert_rules')
    op.drop_index('ix_users_location_consent', table_name='users')
    op.drop_index('ix_users_city_state', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
